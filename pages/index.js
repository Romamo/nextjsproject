import Head from "next/head";
import Image from "next/image";
import React from "react";
import logo from "../public/images/logo.svg";
import s from "../styles/Home.module.scss";
import AnchorLink from "react-anchor-link-smooth-scroll";
import { useMediaQuery } from "@mui/material";
import { Menu } from "@mui/icons-material";
import {
  AppBar,
  Button,
  Drawer,
  IconButton,
  List,
  ListItemButton,
  ListItemText,
  Tab,
  Tabs,
  Toolbar,
  Typography,
} from "@mui/material";
import { createTheme, ThemeProvider } from "@mui/material/styles";

const navLi = ["Overview", "Features", "Plans", "Pricing"];

export default function Home() {
  // Тема от Material UI
  const theme = createTheme({
    components: {
      MuiUseMediaQuery: {
        defaultProps: {
          noSsr: true,
        },
      },
    },
    props: {
      MuiWithWidth: {
        initialWidth: "lg",
      },
    },
    palette: {
      primary: {
        main: "#2196F3",
      },
      secondary: {
        main: "#212121",
      },
      text: {
        primary: "#212121",
        secondary: "#616161",
        disabled: "#9E9E9E",
      },
      white: {
        main: "#ffffff",
      },
    },
  });

  const matches1025 = useMediaQuery("(min-width:1025px)");
  const matches769 = useMediaQuery("(min-width:769px)");
  const matches426 = useMediaQuery("(min-width:426px)");
  const matches376 = useMediaQuery("(min-width:376px)");

  // Состояние активности табов
  const [listItem, setListItem] = React.useState(false);
  const handleChange = (event, newValue) => {
    setListItem(newValue);
  };
  // Состояние открытия меню
  const [openDrawer, setOpenDrawer] = React.useState(false);
  const toggleDrawer = () => {
    setOpenDrawer(!openDrawer);
  };

  return (
    <ThemeProvider theme={theme}>
      <Head>
        <title>Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div id="top"></div>
      {matches1025 ? (
        <header className={s.header}>
          <div className={s.header__wrapper}>
            <div className={s.header__nav}>
              <AnchorLink href="#top" onClick={() => setListItem(false)}>
                <Image src={logo} alt="logo" width={114} />
              </AnchorLink>
              <Tabs
                value={listItem}
                onChange={handleChange}
                textColor="secondary"
                indicatorColor="primary"
              >
                {navLi.map((item, index) => (
                  <Tab
                    key={index}
                    value={index}
                    label={
                      <AnchorLink key={index} href={"#" + item} offset=" 0 ">
                        {item}
                      </AnchorLink>
                    }
                  />
                ))}
              </Tabs>
            </div>
            <div className={s.header__btns}>
              <Button variant="outlined">Sign in</Button>
              <Button variant="contained">Try AppStoreSpy now</Button>
            </div>
          </div>
        </header>
      ) : (
        <div className={s.header}>
          <AppBar>
            <Toolbar>
              <IconButton
                size="large"
                edge="start"
                color="inherit"
                aria-label="menu"
                sx={{ ml: -1.5 }}
                onClick={toggleDrawer}
              >
                <Menu />
              </IconButton>
              <AnchorLink href="#top">
                <Image src={logo} alt="logo" width={114} />
              </AnchorLink>
              <Button variant="contained">Sign in</Button>
            </Toolbar>
            <Drawer anchor="top" open={openDrawer} onClose={toggleDrawer}>
              <List
                sx={{
                  padding: "15px",
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                  justifyContent: "center",
                  gap: "15px",
                }}
              >
                {navLi.map((item, index) => (
                  <ListItemButton
                    sx={{
                      width: "100%",
                    }}
                    key={index}
                  >
                    <ListItemText key={index}>
                      <AnchorLink
                        key={index}
                        href={"#Mob" + item}
                        offset=" 0 "
                        onClick={toggleDrawer}
                      >
                        <Typography
                          sx={{
                            fontFamily: "Roboto",
                            textAlign: "center",
                            fontSize: "25px",
                          }}
                        >
                          {item}
                        </Typography>
                      </AnchorLink>
                    </ListItemText>
                  </ListItemButton>
                ))}
              </List>
            </Drawer>
          </AppBar>
        </div>
      )}
    </ThemeProvider>
  );
}
